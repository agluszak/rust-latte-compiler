---
source: tests/generated_from_inputs.rs
description: "int main() {\n  int i = 78;\n  {\n    int i = 1;\n    printInt(i);\n  }\n  printInt(i);\n  while (i > 76) {\n    i--;\n    printInt(i);\n   // this is a little tricky\n   // on the right hand side, i refers to the outer i\n   int i = i + 7;\n   printInt(i);\n  }\n  printInt(i);\n  if (i > 4) {\n    int i = 4;\n    printInt(i);\n  } else {\n    printString(\"foo\");\n  } \n  printInt(i);\n  return 0 ;\n\n}"
---
; ModuleID = 'core019'
source_filename = "core019"

%string = type { ptr, i32, i32 }

@dnl = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@snl = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1
@d = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@msn = private unnamed_addr constant [6 x i8] c"%ms%n\00", align 1

declare i32 @printf(ptr, ...)

declare i32 @scanf(ptr, ...)

define void @printInt(i32 %0) {
entry:
  %call = call i32 (ptr, ...) @printf(ptr @dnl, i32 %0)
  ret void
}

define void @printString(ptr %0) {
entry:
  %buf_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 1
  %buf = load ptr, ptr %buf_ptr, align 8
  %len = load i32, ptr %len_ptr, align 4
  %call = call i32 (ptr, ...) @printf(ptr @snl, i32 %len, ptr %buf)
  ret void
}

define i32 @readInt() {
entry:
  %buf = alloca i32, align 4
  %call = call i32 (ptr, ...) @scanf(ptr @d, ptr %buf)
  %buf1 = load i32, ptr %buf, align 4
  ret i32 %buf1
}

define ptr @readString() {
entry:
  %buf = alloca ptr, align 8
  %len = alloca i32, align 4
  %call = call i32 (ptr, ...) @scanf(ptr @msn, ptr %buf, ptr %len)
  %buf1 = load ptr, ptr %buf, align 8
  %len2 = load i32, ptr %len, align 4
  %string = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 1
  %len_ptr3 = getelementptr inbounds %string, ptr %string, i32 0, i32 2
  store ptr %buf1, ptr %buf_ptr, align 8
  store i32 %len2, ptr %len_ptr, align 4
  store i32 %len2, ptr %len_ptr3, align 4
  ret ptr %string
}

declare noalias ptr @malloc(i32)

define i32 @main() {
b0:
  call void @printInt(i32 1)
  call void @printInt(i32 78)
  br label %b1

b1:                                               ; preds = %b3, %b0
  %v4 = phi i32 [ 78, %b0 ], [ %v8, %b3 ]
  %v6 = icmp sgt i32 %v4, 76
  br i1 %v6, label %b3, label %b2

b2:                                               ; preds = %b1
  call void @printInt(i32 %v4)
  %v15 = icmp sgt i32 %v4, 4
  br i1 %v15, label %b4, label %b5

b3:                                               ; preds = %b1
  %v8 = sub i32 %v4, 1
  call void @printInt(i32 %v8)
  %v11 = add i32 %v8, 7
  call void @printInt(i32 %v11)
  br label %b1

b4:                                               ; preds = %b2
  call void @printInt(i32 4)
  br label %b6

b5:                                               ; preds = %b2
  %buf = tail call ptr @malloc(i32 mul (i32 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32), i32 3))
  store [3 x i8] c"foo", ptr %buf, align 1
  %string = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 1
  %len_ptr1 = getelementptr inbounds %string, ptr %string, i32 0, i32 2
  store ptr %buf, ptr %buf_ptr, align 8
  store i32 3, ptr %len_ptr, align 4
  store i32 3, ptr %len_ptr1, align 4
  call void @printString(ptr %string)
  br label %b6

b6:                                               ; preds = %b5, %b4
  call void @printInt(i32 %v4)
  ret i32 0
}

