---
source: tests/generated_from_inputs.rs
description: "void simpl(int a) {\n    if (a - a == 0) {\n        printInt(1);\n    } else {\n        // This call should not be GENERATED at all\n        printInt(0);\n    }\n}\n\nint main() {\n    simpl(1);\n    return 0;\n}\n"
---
; ModuleID = 'expr_simplification2'
source_filename = "expr_simplification2"

%string = type { ptr, i32, i32 }

@dnl = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@snl = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1

declare i32 @printf(ptr, ...)

define void @printInt(i32 %0) {
entry:
  %call = call i32 (ptr, ...) @printf(ptr @dnl, i32 %0)
  ret void
}

define void @printString(ptr %0) {
entry:
  %buf_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 1
  %buf = load i8, ptr %buf_ptr, align 1
  %len = load i32, ptr %len_ptr, align 4
  %call = call i32 (ptr, ...) @printf(ptr @snl, i32 %len, i8 %buf)
  ret void
}

define i32 @main() {
b0:
  call void @simpl(i32 1)
  ret i32 0
}

define void @simpl(i32 %0) {
b0:
  %v1 = sub i32 %0, %0
  %v3 = icmp eq i32 %v1, 0
  br i1 %v3, label %b1, label %b2

b1:                                               ; preds = %b0
  call void @printInt(i32 1)
  br label %b3

b2:                                               ; preds = %b0
  call void @printInt(i32 0)
  br label %b3

b3:                                               ; preds = %b2, %b1
  ret void
}

