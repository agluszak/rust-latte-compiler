---
source: tests/generated_from_inputs.rs
description: "string add(string a, string b) {\n    return a + b;\n}\n\nint main() {\n    int i = 3;\n    string s = \"Hello\";\n    while (i > 0) {\n        s = add(s, \"!\");\n        i--;\n    }\n    printString(s);\n    return 0;\n}"
---
; ModuleID = 'string_ops'
source_filename = "string_ops"

%string = type { i8*, i32 }

declare void @printInt(i32)

declare void @printString(%string*)

declare i32 @readInt()

declare %string* @readString()

declare void @error()

declare %string* @newString(i8*, i32)

declare %string* @stringConcat(%string*, %string*)

declare i32 @stringEqual(%string*, %string*)

define %string* @add(%string* %0, %string* %1) {
b0:
  %new_string = call %string* @stringConcat(%string* %0, %string* %1)
  ret %string* %new_string
}

define i32 @main() {
b0:
  %str_ptr = alloca [5 x i8], align 1
  store [5 x i8] c"Hello", [5 x i8]* %str_ptr, align 1
  %str_ptr1 = bitcast [5 x i8]* %str_ptr to i8*
  %new_string = call %string* @newString(i8* %str_ptr1, i32 5)
  br label %b1

b1:                                               ; preds = %b3, %b0
  %v2 = phi i32 [ 3, %b0 ], [ %v9, %b3 ]
  %v5 = phi %string* [ %new_string, %b0 ], [ %add, %b3 ]
  %v4 = icmp sgt i32 %v2, 0
  br i1 %v4, label %b3, label %b2

b2:                                               ; preds = %b1
  call void @printString(%string* %v5)
  ret i32 0

b3:                                               ; preds = %b1
  %str_ptr2 = alloca [1 x i8], align 1
  store [1 x i8] c"!", [1 x i8]* %str_ptr2, align 1
  %str_ptr3 = bitcast [1 x i8]* %str_ptr2 to i8*
  %new_string4 = call %string* @newString(i8* %str_ptr3, i32 1)
  %add = call %string* @add(%string* %v5, %string* %new_string4)
  %v9 = sub i32 %v2, 1
  br label %b1
}

