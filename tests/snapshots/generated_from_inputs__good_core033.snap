---
source: tests/generated_from_inputs.rs
description: "int funkcja_ifbooltrudny (boolean f, boolean t) {\n  if ((!f && f) || !(f || !t)) {\n    printInt(1042);\n  } else {\n    printInt(2042);\n  }\n  return 0;\n}\n\nint main () {\n  funkcja_ifbooltrudny (false, true);\n  return 0;\n}\n"
---
; ModuleID = 'core033'
source_filename = "core033"

%string = type { ptr, i32, i32 }

@dnl = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@snl = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1
@d = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@msn = private unnamed_addr constant [6 x i8] c"%ms%n\00", align 1

declare i32 @printf(ptr, ...)

declare i32 @scanf(ptr, ...)

define void @printInt(i32 %0) {
entry:
  %call = call i32 (ptr, ...) @printf(ptr @dnl, i32 %0)
  ret void
}

define void @printString(ptr %0) {
entry:
  %buf_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 1
  %buf = load ptr, ptr %buf_ptr, align 8
  %len = load i32, ptr %len_ptr, align 4
  %call = call i32 (ptr, ...) @printf(ptr @snl, i32 %len, ptr %buf)
  ret void
}

define i32 @readInt() {
entry:
  %buf = alloca i32, align 4
  %call = call i32 (ptr, ...) @scanf(ptr @d, ptr %buf)
  %buf1 = load i32, ptr %buf, align 4
  ret i32 %buf1
}

define ptr @readString() {
entry:
  %buf = alloca ptr, align 8
  %len = alloca i32, align 4
  %call = call i32 (ptr, ...) @scanf(ptr @msn, ptr %buf, ptr %len)
  %buf1 = load ptr, ptr %buf, align 8
  %len2 = load i32, ptr %len, align 4
  %string = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 1
  %len_ptr3 = getelementptr inbounds %string, ptr %string, i32 0, i32 2
  store ptr %buf1, ptr %buf_ptr, align 8
  store i32 %len2, ptr %len_ptr, align 4
  store i32 %len2, ptr %len_ptr3, align 4
  ret ptr %string
}

declare noalias ptr @malloc(i32)

define i32 @funkcja_ifbooltrudny(i1 %0, i1 %1) {
b0:
  %v2 = xor i1 %0, true
  br i1 %v2, label %b2, label %b3

b1:                                               ; preds = %b2
  br label %b4

b2:                                               ; preds = %b0
  br i1 %0, label %b1, label %b3

b3:                                               ; preds = %b2, %b0
  br label %b4

b4:                                               ; preds = %b3, %b1
  %v5 = phi i1 [ true, %b1 ], [ false, %b3 ]
  br i1 %v5, label %b5, label %b6

b5:                                               ; preds = %b12, %b4
  br label %b8

b6:                                               ; preds = %b4
  br i1 %0, label %b9, label %b10

b7:                                               ; preds = %b12
  br label %b8

b8:                                               ; preds = %b7, %b5
  %v17 = phi i1 [ true, %b5 ], [ false, %b7 ]
  br i1 %v17, label %b13, label %b14

b9:                                               ; preds = %b10, %b6
  br label %b12

b10:                                              ; preds = %b6
  %v10 = xor i1 %1, true
  br i1 %v10, label %b9, label %b11

b11:                                              ; preds = %b10
  br label %b12

b12:                                              ; preds = %b11, %b9
  %v13 = phi i1 [ true, %b9 ], [ false, %b11 ]
  %v14 = xor i1 %v13, true
  br i1 %v14, label %b5, label %b7

b13:                                              ; preds = %b8
  call void @printInt(i32 1042)
  br label %b15

b14:                                              ; preds = %b8
  call void @printInt(i32 2042)
  br label %b15

b15:                                              ; preds = %b14, %b13
  ret i32 0
}

define i32 @main() {
b0:
  %funkcja_ifbooltrudny = call i32 @funkcja_ifbooltrudny(i1 false, i1 true)
  ret i32 0
}

