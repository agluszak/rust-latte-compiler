---
source: tests/generated_from_inputs.rs
description: "/* parity of positive integers by loop */\n\nint main () {\n  int y = 17;\n  while (y > 0)\n    y = y - 2;\n  if (y < 0) {\n    printInt(0);\n    return 0 ;\n    }\n  else {\n    printInt(1);\n    return 0 ;\n    }\n}\n"
---
; ModuleID = 'core016'
source_filename = "core016"

%string = type { ptr, i32, i32 }

@dnl = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@snl = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1

declare i32 @printf(ptr, ...)

define void @printInt(i32 %0) {
entry:
  %call = call i32 (ptr, ...) @printf(ptr @dnl, i32 %0)
  ret void
}

define void @printString(ptr %0) {
entry:
  %buf_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 1
  %buf = load ptr, ptr %buf_ptr, align 8
  %len = load i32, ptr %len_ptr, align 4
  %call = call i32 (ptr, ...) @printf(ptr @snl, i32 %len, ptr %buf)
  ret void
}

define i32 @main() {
b0:
  br label %b1

b1:                                               ; preds = %b3, %b0
  %v1 = phi i32 [ 17, %b0 ], [ %v5, %b3 ]
  %v3 = icmp sgt i32 %v1, 0
  br i1 %v3, label %b3, label %b2

b2:                                               ; preds = %b1
  %v7 = icmp slt i32 %v1, 0
  br i1 %v7, label %b4, label %b5

b3:                                               ; preds = %b1
  %v5 = sub i32 %v1, 2
  br label %b1

b4:                                               ; preds = %b2
  call void @printInt(i32 0)
  ret i32 0

b5:                                               ; preds = %b2
  call void @printInt(i32 1)
  ret i32 0
}

