---
source: tests/generated_from_inputs.rs
description: "/* Test boolean operators. */\n\nint main() {\n  printString(\"&&\");\n  printBool(test(-1) && test(0));\n  printBool(test(-2) && test(1));\n  printBool(test(3) && test(-5));\n  printBool(test(234234) && test(21321));\n  printString(\"||\");\n  printBool(test(-1) || test(0));\n  printBool(test(-2) || test(1));\n  printBool(test(3) || test(-5));\n  printBool(test(234234) || test(21321));\n  printString(\"!\");\n  printBool(true);\n  printBool(false);\n  return 0 ;\n\n}\n\nvoid printBool(boolean b) {\n  if (!b) {\n    printString(\"false\");\n  } else {\n    printString(\"true\");\n }\n return;\n}\n\nboolean test(int i) {\n  printInt(i);\n  return i > 0;\n}"
---
; ModuleID = 'core013'
source_filename = "core013"

%string = type { ptr, i32, i32 }

@dnl = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@snl = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1

declare i32 @printf(ptr, ...)

define void @printInt(i32 %0) {
entry:
  %call = call i32 (ptr, ...) @printf(ptr @dnl, i32 %0)
  ret void
}

define void @printString(ptr %0) {
entry:
  %buf_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 1
  %buf = load ptr, ptr %buf_ptr, align 8
  %len = load i32, ptr %len_ptr, align 4
  %call = call i32 (ptr, ...) @printf(ptr @snl, i32 %len, ptr %buf)
  ret void
}

define i32 @main() {
b0:
  %buf = tail call ptr @malloc(i32 mul (i32 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32), i32 2))
  store [2 x i8] c"&&", ptr %buf, align 1
  %string = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 1
  %len_ptr1 = getelementptr inbounds %string, ptr %string, i32 0, i32 2
  store ptr %buf, ptr %buf_ptr, align 8
  store i32 2, ptr %len_ptr, align 4
  store i32 2, ptr %len_ptr1, align 4
  call void @printString(ptr %string)
  %test = call i1 @test(i32 -1)
  %test2 = call i1 @test(i32 0)
  %v7 = and i1 %test, %test2
  call void @printBool(i1 %v7)
  %test3 = call i1 @test(i32 -2)
  %test4 = call i1 @test(i32 1)
  %v14 = and i1 %test3, %test4
  call void @printBool(i1 %v14)
  %test5 = call i1 @test(i32 3)
  %test6 = call i1 @test(i32 -5)
  %v21 = and i1 %test5, %test6
  call void @printBool(i1 %v21)
  %test7 = call i1 @test(i32 234234)
  %test8 = call i1 @test(i32 21321)
  %v27 = and i1 %test7, %test8
  call void @printBool(i1 %v27)
  %buf9 = tail call ptr @malloc(i32 mul (i32 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32), i32 2))
  store [2 x i8] c"||", ptr %buf9, align 1
  %string10 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr11 = getelementptr inbounds %string, ptr %string10, i32 0, i32 0
  %len_ptr12 = getelementptr inbounds %string, ptr %string10, i32 0, i32 1
  %len_ptr13 = getelementptr inbounds %string, ptr %string10, i32 0, i32 2
  store ptr %buf9, ptr %buf_ptr11, align 8
  store i32 2, ptr %len_ptr12, align 4
  store i32 2, ptr %len_ptr13, align 4
  call void @printString(ptr %string10)
  %test14 = call i1 @test(i32 -1)
  %test15 = call i1 @test(i32 0)
  %v36 = or i1 %test14, %test15
  call void @printBool(i1 %v36)
  %test16 = call i1 @test(i32 -2)
  %test17 = call i1 @test(i32 1)
  %v43 = or i1 %test16, %test17
  call void @printBool(i1 %v43)
  %test18 = call i1 @test(i32 3)
  %test19 = call i1 @test(i32 -5)
  %v50 = or i1 %test18, %test19
  call void @printBool(i1 %v50)
  %test20 = call i1 @test(i32 234234)
  %test21 = call i1 @test(i32 21321)
  %v56 = or i1 %test20, %test21
  call void @printBool(i1 %v56)
  %buf22 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32))
  store [1 x i8] c"!", ptr %buf22, align 1
  %string23 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr24 = getelementptr inbounds %string, ptr %string23, i32 0, i32 0
  %len_ptr25 = getelementptr inbounds %string, ptr %string23, i32 0, i32 1
  %len_ptr26 = getelementptr inbounds %string, ptr %string23, i32 0, i32 2
  store ptr %buf22, ptr %buf_ptr24, align 8
  store i32 1, ptr %len_ptr25, align 4
  store i32 1, ptr %len_ptr26, align 4
  call void @printString(ptr %string23)
  call void @printBool(i1 true)
  call void @printBool(i1 false)
  ret i32 0
}

define void @printBool(i1 %0) {
b0:
  %v1 = xor i1 %0, true
  br i1 %v1, label %b1, label %b2

b1:                                               ; preds = %b0
  %buf = tail call ptr @malloc(i32 mul (i32 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32), i32 5))
  store [5 x i8] c"false", ptr %buf, align 1
  %string = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 1
  %len_ptr1 = getelementptr inbounds %string, ptr %string, i32 0, i32 2
  store ptr %buf, ptr %buf_ptr, align 8
  store i32 5, ptr %len_ptr, align 4
  store i32 5, ptr %len_ptr1, align 4
  call void @printString(ptr %string)
  br label %b3

b2:                                               ; preds = %b0
  %buf2 = tail call ptr @malloc(i32 mul (i32 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i32), i32 4))
  store [4 x i8] c"true", ptr %buf2, align 1
  %string3 = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr4 = getelementptr inbounds %string, ptr %string3, i32 0, i32 0
  %len_ptr5 = getelementptr inbounds %string, ptr %string3, i32 0, i32 1
  %len_ptr6 = getelementptr inbounds %string, ptr %string3, i32 0, i32 2
  store ptr %buf2, ptr %buf_ptr4, align 8
  store i32 4, ptr %len_ptr5, align 4
  store i32 4, ptr %len_ptr6, align 4
  call void @printString(ptr %string3)
  br label %b3

b3:                                               ; preds = %b2, %b1
  ret void
}

define i1 @test(i32 %0) {
b0:
  call void @printInt(i32 %0)
  %v3 = icmp sgt i32 %0, 0
  ret i1 %v3
}

declare noalias ptr @malloc(i32)

