---
source: tests/generated_from_inputs.rs
description: "int main() {\n  int a=1,b=2,c=1,d=2,e=1,f=2,g=1,h=2,i=1,j=2,k=1,l=2,m=1,n=2;\n  return foo(a,b,c,d,e,f,g,h,i,j,k,l,m,n);\n}\n\n\nint foo(int a,int b,int c,int d,int e,int f,int g,\n        int h,int i,int j,int k,int l,int m, int n) {\n\t\n  int r = (2*a+b/2+c+d+e+f+g+h+i+j/2+k+l+m+n)%10;\n  printInt(r);\n  return r;\n}"
---
; ModuleID = 'core023'
source_filename = "core023"

%string = type { ptr, i32, i32 }

@dnl = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@snl = private unnamed_addr constant [6 x i8] c"%.*s\0A\00", align 1
@d = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@msn = private unnamed_addr constant [6 x i8] c"%ms%n\00", align 1

declare i32 @printf(ptr, ...)

declare i32 @scanf(ptr, ...)

define void @printInt(i32 %0) {
entry:
  %call = call i32 (ptr, ...) @printf(ptr @dnl, i32 %0)
  ret void
}

define void @printString(ptr %0) {
entry:
  %buf_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %0, i32 0, i32 1
  %buf = load ptr, ptr %buf_ptr, align 8
  %len = load i32, ptr %len_ptr, align 4
  %call = call i32 (ptr, ...) @printf(ptr @snl, i32 %len, ptr %buf)
  ret void
}

define i32 @readInt() {
entry:
  %buf = alloca i32, align 4
  %call = call i32 (ptr, ...) @scanf(ptr @d, ptr %buf)
  %buf1 = load i32, ptr %buf, align 4
  ret i32 %buf1
}

define ptr @readString() {
entry:
  %buf = alloca ptr, align 8
  %len = alloca i32, align 4
  %call = call i32 (ptr, ...) @scanf(ptr @msn, ptr %buf, ptr %len)
  %buf1 = load ptr, ptr %buf, align 8
  %len2 = load i32, ptr %len, align 4
  %string = tail call ptr @malloc(i32 ptrtoint (ptr getelementptr (%string, ptr null, i32 1) to i32))
  %buf_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 0
  %len_ptr = getelementptr inbounds %string, ptr %string, i32 0, i32 1
  %len_ptr3 = getelementptr inbounds %string, ptr %string, i32 0, i32 2
  store ptr %buf1, ptr %buf_ptr, align 8
  store i32 %len2, ptr %len_ptr, align 4
  store i32 %len2, ptr %len_ptr3, align 4
  ret ptr %string
}

declare noalias ptr @malloc(i32)

define i32 @foo(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13) {
b0:
  %v15 = mul i32 2, %0
  %v17 = sdiv i32 %1, 2
  %v18 = add i32 %v15, %v17
  %v19 = add i32 %v18, %2
  %v20 = add i32 %v19, %3
  %v21 = add i32 %v20, %4
  %v22 = add i32 %v21, %5
  %v23 = add i32 %v22, %6
  %v24 = add i32 %v23, %7
  %v25 = add i32 %v24, %8
  %v27 = sdiv i32 %9, 2
  %v28 = add i32 %v25, %v27
  %v29 = add i32 %v28, %10
  %v30 = add i32 %v29, %11
  %v31 = add i32 %v30, %12
  %v32 = add i32 %v31, %13
  %v34 = srem i32 %v32, 10
  call void @printInt(i32 %v34)
  ret i32 %v34
}

define i32 @main() {
b0:
  %foo = call i32 @foo(i32 1, i32 2, i32 1, i32 2, i32 1, i32 2, i32 1, i32 2, i32 1, i32 2, i32 1, i32 2, i32 1, i32 2)
  ret i32 %foo
}

